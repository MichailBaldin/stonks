package main

// 1. Объяви переменную через var с типом int без инициализации и выведи её zero value через fmt.Println.

// 2. Объяви переменную через короткое := присваивание (тип int), присвой 42 и выведи значение.

// 3. Объяви три константы для дней недели с использованием iota и выведи их значения.

// 4. Объяви переменную типа string и отдельную переменную типа rune (символ). Выведи их типы и значения через fmt.Printf.

// 5. Создай пакет main с функцией init(), которая выводит "init called", и функцией main(), которая выводит "main called".

// 6. Считай из os.Args[0] имя запускаемого файла и выведи его. Если аргументов меньше 1 — выведи "no args".

// 7. Считай из os.Args все аргументы, кроме os.Args[0], и выведи их по одному в цикле for.

// 8. Напиши функцию add(a, b int) int, вызови её в main и выведи результат через fmt.Println.

// 9. Напиши функцию greet(name string) string, возвращающую "Hello, <name>". Выведи результат.

// 10. Реализуй цикл for как while: увеличивай счётчик от 0 до 4 включительно и печатай значения.

// 11. Используй for-range по строке с Unicode-символами (например, "Привет") и выведи индекс и rune в hex-формате через fmt.Printf.

// 12. Создай переменную типа byte со значением 65 и выведи символ и числовое значение (как %c и %d).

// 13. Сравни len("Привет") и количество рун в строке (через utf8.RuneCountInString). Выведи оба числа.

// 14. Преобразуй строку "Go" в срез байтов []byte и выведи элементы по одному в десятичном виде.

// 15. Напиши switch по значению переменной day (int): 1—"Mon", 2—"Tue", иначе—"Other". Выведи результат.

// 16. Напиши switch без выражения: по логическим кейсам определи, положительное ли число, ноль или отрицательное, и выведи строку.

// 17. Объяви переменную var n int; не присваивай ей значение. С помощью if проверь, равна ли она 0 (zero value), и выведи "zero".

// 18. Считай переменную окружения "HOME" через os.Getenv и выведи её значение. Если пусто — выведи "HOME is empty".

// 19. Создай константу pi = 3.14 (типизированную как float64) и выведи её через fmt.Printf с точностью до 2 знаков после запятой.

// 20. Напиши функцию isEven(n int) bool. В main прочитай n из заранее заданной переменной и выведи true/false.

// 21. Объяви переменную типа rune для символа 'Ж'. Выведи Unicode код (как U+XXXX) и сам символ.

// 22. Считай первый аргумент из os.Args (если есть) как строку s. Выведи количество байт (len) и количество рун (utf8.RuneCountInString).

// 23. Напиши цикл for, который прерывается (break), когда счётчик достигнет 3. Печатай значения до прерывания.

// 24. Напиши цикл for от 1 до 10 и через continue пропусти печать нечётных чисел. Выведи только чётные.

// 25. Объяви неизменяемую константу version = "1.0.0" и выведи "Version: <version>".

// 26. Создай функцию printBytes(s string), которая печатает байты строки в hex через fmt.Printf. Вызови её с "Go!".

// 27. Создай функцию printRunes(s string), которая печатает руны строки как U+код и символ. Вызови её с "Привет".

// 28. Реализуй switch по типу интерфейсного значения (type switch): для int выведи "int", для string — "string", иначе — "unknown".

// 29. Объяви переменную var b byte = 'A' и преобразуй её к rune. Выведи обе: как %d и %c для каждой.

// 30. Напиши функцию sign(n int) string, возвращающую "negative", "zero" или "positive". Протестируй в main на нескольких значениях.

//

// 1. Объяви переменную через var с типом int без инициализации и выведи её zero value через fmt.Println.

// 2. Объяви переменную через короткое := присваивание (тип int), присвой 42 и выведи значение.

// 3. Объяви три константы для дней недели с использованием iota и выведи их значения.

// 4. Объяви переменную типа string и отдельную переменную типа rune (символ). Выведи их типы и значения через fmt.Printf.

// 5. Создай пакет main с функцией init(), которая выводит "init called", и функцией main(), которая выводит "main called".

// 6. Считай из os.Args[0] имя запускаемого файла и выведи его. Если аргументов меньше 1 — выведи "no args".

// 7. Считай из os.Args все аргументы, кроме os.Args[0], и выведи их по одному в цикле for.

// 8. Напиши функцию add(a, b int) int, вызови её в main и выведи результат через fmt.Println.

// 9. Напиши функцию greet(name string) string, возвращающую "Hello, <name>". Выведи результат.

// 10. Реализуй цикл for как while: увеличивай счётчик от 0 до 4 включительно и печатай значения.

// 11. Используй for-range по строке с Unicode-символами (например, "Привет") и выведи индекс и rune в hex-формате через fmt.Printf.

// 12. Создай переменную типа byte со значением 65 и выведи символ и числовое значение (как %c и %d).

// 13. Сравни len("Привет") и количество рун в строке (через utf8.RuneCountInString). Выведи оба числа.

// 14. Преобразуй строку "Go" в срез байтов []byte и выведи элементы по одному в десятичном виде.

// 15. Напиши switch по значению переменной day (int): 1—"Mon", 2—"Tue", иначе—"Other". Выведи результат.

// 16. Напиши switch без выражения: по логическим кейсам определи, положительное ли число, ноль или отрицательное, и выведи строку.

// 17. Объяви переменную var n int; не присваивай ей значение. С помощью if проверь, равна ли она 0 (zero value), и выведи "zero".

// 18. Считай переменную окружения "HOME" через os.Getenv и выведи её значение. Если пусто — выведи "HOME is empty".

// 19. Создай константу pi = 3.14 (типизированную как float64) и выведи её через fmt.Printf с точностью до 2 знаков после запятой.

// 20. Напиши функцию isEven(n int) bool. В main прочитай n из заранее заданной переменной и выведи true/false.

// 21. Объяви переменную типа rune для символа 'Ж'. Выведи Unicode код (как U+XXXX) и сам символ.

// 22. Считай первый аргумент из os.Args (если есть) как строку s. Выведи количество байт (len) и количество рун (utf8.RuneCountInString).

// 23. Напиши цикл for, который прерывается (break), когда счётчик достигнет 3. Печатай значения до прерывания.

// 24. Напиши цикл for от 1 до 10 и через continue пропусти печать нечётных чисел. Выведи только чётные.

// 25. Объяви неизменяемую константу version = "1.0.0" и выведи "Version: <version>".

// 26. Создай функцию printBytes(s string), которая печатает байты строки в hex через fmt.Printf. Вызови её с "Go!".

// 27. Создай функцию printRunes(s string), которая печатает руны строки как U+код и символ. Вызови её с "Привет".

// 28. Реализуй switch по типу интерфейсного значения (type switch): для int выведи "int", для string — "string", иначе — "unknown".

// 29. Объяви переменную var b byte = 'A' и преобразуй её к rune. Выведи обе: как %d и %c для каждой.

// 30. Напиши функцию sign(n int) string, возвращающую "negative", "zero" или "positive". Протестируй в main на нескольких значениях.
