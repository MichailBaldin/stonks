package main

// ======================================
// –¢—Ä–µ–Ω–∞–∂—ë—Ä: strings, runes, bytes (v1)
// ======================================
// –ü—Ä–∞–≤–∏–ª–∞: –Ω–µ –ø–æ–ª–∞–≥–∞–π—Å—è –Ω–∞ "–±–∞–π—Ç == —Å–∏–º–≤–æ–ª". –°—Ç—Ä–æ–∫–∏ –∏–º–º—É—Ç–∞–±–µ–ª—å–Ω—ã. UTF-8 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.

// --- –ë–ª–æ–∫ A. –ë–∞–∑–∞ —Å—Ç—Ä–æ–∫ –∏ –±–∞–π—Ç–æ–≤ ---

// 1. –°–æ–∑–¥–∞–π —Å—Ç—Ä–æ–∫—É s := "Go" –∏ –≤—ã–≤–µ–¥–∏ len(s) –∏ s[0]. –ß–µ–º —è–≤–ª—è–µ—Ç—Å—è s[0]?
// 2. –°–æ–∑–¥–∞–π —Å—Ç—Ä–æ–∫—É —Å –Ω–µ-ASCII: s := "–ø—Ä–∏–≤–µ—Ç". –í—ã–≤–µ–¥–∏ len(s) –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—É–Ω (utf8.RuneCountInString).
// 3. –ü–æ–ø—Ä–æ–±—É–π –∏–∑–º–µ–Ω–∏—Ç—å —Å–∏–º–≤–æ–ª –ø–æ –∏–Ω–¥–µ–∫—Å—É: s[0] = 'X' ‚Äî –∑–∞—Ñ–∏–∫—Å–∏—Ä—É–π –æ—à–∏–±–∫—É –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ (—Å—Ç—Ä–æ–∫–∞ –∏–º–º—É—Ç–∞–±–µ–ª—å–Ω–∞).
// 4. –ü—Ä–µ–æ–±—Ä–∞–∑—É–π "–ø—Ä–∏–≤–µ—Ç" –≤ []byte –∏ []rune. –í—ã–≤–µ–¥–∏ –¥–ª–∏–Ω—ã –æ–±–æ–∏—Ö –º–∞—Å—Å–∏–≤–æ–≤.
// 5. –°–æ–±–µ—Ä–∏ —Å—Ç—Ä–æ–∫—É –æ–±—Ä–∞—Ç–Ω–æ –∏–∑ []rune –∏ –∏–∑ []byte. –°—Ä–∞–≤–Ω–∏ (==) —Å –∏—Å—Ö–æ–¥–Ω–æ–π.
// 6. –°–æ–∑–¥–∞–π []byte —Å –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–π UTF-8 –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é; –ø—Ä–æ–≤–µ—Ä—å utf8.Valid –∏ utf8.ValidString.
// 7. –í—ã–≤–µ–¥–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–π—Ç –≤ —Å–∏–º–≤–æ–ª–µ '–Ø' —á–µ—Ä–µ–∑ utf8.RuneLen('–Ø') –∏ –≤ ASCII 'A'.
// 8. –í–æ–∑—å–º–∏ –ø–æ–¥—Å—Ç—Ä–æ–∫—É –ø–æ –±–∞–π—Ç–∞–º: s := "–º–∏—Ä"; s[:2] ‚Äî —á—Ç–æ –ø–æ–ª—É—á–∏—Ç—Å—è? –û–±—ä—è—Å–Ω–∏, –ø–æ—á–µ–º—É –ª–æ–º–∞–µ—Ç—Å—è.
// 9. –°–¥–µ–ª–∞–π –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –≤–∑—è—Ç–∏–µ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –ø–æ —Ä—É–Ω–∞–º: –ø–µ—Ä–≤—ã–µ 2 —Ä—É–Ω—ã —Å—Ç—Ä–æ–∫–∏ "–º–∏—Ä".
// 10. –°—Ä–∞–≤–Ω–∏ —Å—Ç—Ä–æ–∫—É —Å –±–∞–π—Ç–æ–≤—ã–º —Å—Ä–µ–∑–æ–º: bytes.Equal([]byte(s), b) vs string(b) == s.

// --- –ë–ª–æ–∫ B. –ò—Ç–µ—Ä–∞—Ü–∏–∏ –∏ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ UTF-8 ---

// 11. –ü—Ä–æ–π–¥–∏ —Å—Ç—Ä–æ–∫—É range‚Äô–æ–º –∏ –≤—ã–≤–µ–¥–∏ –∏–Ω–¥–µ–∫—Å –∏ —Ä—É–Ω—É (–∏–Ω–¥–µ–∫—Å ‚Äî –≤ –±–∞–π—Ç–∞—Ö).
// 12. –¢–æ –∂–µ, –Ω–æ –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ utf8.DecodeRuneInString —Å —è–≤–Ω—ã–º —à–∞–≥–æ–º –ø–æ –±–∞–π—Ç–∞–º.
// 13. –î–µ–∫–æ–¥–∏—Ä—É–π —Ä—É–Ω—ã –∏–∑ []byte —á–µ—Ä–µ–∑ utf8.DecodeRune, —É—á–∏—Ç—ã–≤–∞—è utf8.RuneError.
// 14. –ü–æ–¥—Å—á–∏—Ç–∞–π —á–∞—Å—Ç–æ—Ç—ã —Ä—É–Ω –≤ —Å—Ç—Ä–æ–∫–µ —Å—ç–º–ø–ª–∞ (map[rune]int).
// 15. –ü–æ–¥—Å—á–∏—Ç–∞–π —á–∞—Å—Ç–æ—Ç—ã –ë–ê–ô–¢ –≤ —Ç–æ–π –∂–µ —Å—Ç—Ä–æ–∫–µ (map[byte]int). –°—Ä–∞–≤–Ω–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ.
// 16. –†–µ–∞–ª–∏–∑—É–π –ø–æ–∏—Å–∫ –ø–µ—Ä–≤–æ–≥–æ –±–∞–π—Ç–æ–≤–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ä—É–Ω—ã –≤ —Å—Ç—Ä–æ–∫–µ (–±–µ–∑ strings.IndexRune).
// 17. –†–µ–∞–ª–∏–∑—É–π –æ–±—Ä–∞—Ç–Ω—É—é –∏—Ç–µ—Ä–∞—Ü–∏—é –ø–æ —Ä—É–Ω–∞–º (DecodeLastRuneInString).
// 18. –ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ \n ‚Äî –æ–¥–Ω–∞ —Ä—É–Ω–∞, –∞ "üëã" ‚Äî –Ω–µ—Å–∫–æ–ª—å–∫–æ –±–∞–π—Ç (–∏ –æ–¥–Ω–∞ —Ä—É–Ω–∞).
// 19. –°–∫–æ–Ω—Å—Ç—Ä—É–∏—Ä—É–π —Å—Ç—Ä–æ–∫—É —Å –∫–æ–º–±–∏–Ω–∏—Ä—É–µ–º—ã–º –∞–∫—Ü–µ–Ω—Ç–æ–º: "eÃÅ" (e + U+0301). –ü–æ—Å—á–∏—Ç–∞–π —Ä—É–Ω—ã –∏ –±–∞–π—Ç—ã.
// 20. –°—Ä–∞–≤–Ω–∏ "√©" (U+00E9) –∏ "e"+"ÃÅ" –ø–æ EqualFold –∏ –ø–æ ==. –û–±—Å—É–¥–∏ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—é (–≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏).

// --- –ë–ª–æ–∫ C. –ü–æ–∏—Å–∫, —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ, –ø—Ä–µ—Ñ–∏–∫—Å—ã/—Å—É—Ñ—Ñ–∏–∫—Å—ã ---

// 21. –ò—Å–ø–æ–ª—å–∑—É–π strings.Contains / HasPrefix / HasSuffix –¥–ª—è ASCII –∏ –Ω–µ-ASCII –ø—Ä–∏–º–µ—Ä–æ–≤.
// 22. –ù–∞–π–¥–∏ –∏–Ω–¥–µ–∫—Å –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ —á–µ—Ä–µ–∑ strings.Index / LastIndex –∏ –¥–ª—è —Ä—É–Ω—ã —á–µ—Ä–µ–∑ strings.IndexRune.
// 23. –°—Ä–∞–≤–Ω–∏ —Å—Ç—Ä–æ–∫–∏ –ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ strings.Compare –∏ —á–µ—Ä–µ–∑ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã <, >.
// 24. –°–¥–µ–ª–∞–π —Ä–µ–≥–∏—Å—Ç—Ä–æ–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ EqualFold –Ω–∞ "stra√üe" –∏ "STRASSE".
// 25. –†–µ–∞–ª–∏–∑—É–π ContainsFold(s, sub) —á–µ—Ä–µ–∑ –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∫ –æ–¥–Ω–æ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –∏ –ø–æ–∫–∞–∂–∏, –ø–æ—á–µ–º—É EqualFold –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–µ–µ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è.

// --- –ë–ª–æ–∫ D. –†–∞–∑–±–∏–µ–Ω–∏–µ, —Å–∫–ª–µ–π–∫–∞, —Ç—Ä–∏–º–º–∏–Ω–≥ ---

// 26. –†–∞–∑–±–µ–π —Å—Ç—Ä–æ–∫—É –ø–æ –ø—Ä–æ–±–µ–ª–∞–º —á–µ—Ä–µ–∑ strings.Fields –∏ –ø–æ –∑–∞–ø—è—Ç–æ–π —á–µ—Ä–µ–∑ strings.Split.
// 27. –°–¥–µ–ª–∞–π SplitN –∏ Join –æ–±—Ä–∞—Ç–Ω–æ, —Å–æ—Ö—Ä–∞–Ω—è–π –ø–æ—Ä—è–¥–æ–∫.
// 28. –£–¥–∞–ª–∏ –ø—Ä–æ–±–µ–ª—ã –ø–æ –∫—Ä–∞—è–º: TrimSpace; –∑–∞—Ç–µ–º Trim –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ä—É–Ω.
// 29. –ò—Å–ø–æ–ª—å–∑—É–π TrimFunc —Å unicode.IsLetter –¥–ª—è –æ–±—Ä–µ–∑–∫–∏ –Ω–µ-–±—É–∫–≤–µ–Ω–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤.
// 30. –†–∞–∑–±–µ–π —Å—Ç—Ä–æ–∫—É –Ω–∞ —Å–ª–æ–≤–∞ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º FieldsFunc: —Å–ª–æ–≤–æ ‚Äî –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å unicode.IsLetter.

// --- –ë–ª–æ–∫ E. –ó–∞–º–µ–Ω—ã –∏ –º–∞–ø–ø–∏–Ω–≥ ---

// 31. –ó–∞–º–µ–Ω—è–π –≤—Å–µ –≤—Ö–æ–∂–¥–µ–Ω–∏—è strings.ReplaceAll, –∏ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ N ‚Äî strings.Replace.
// 32. –ò—Å–ø–æ–ª—å–∑—É–π strings.Map –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Ü–∏—Ñ—Ä –∏–∑ —Å—Ç—Ä–æ–∫–∏.
// 33. –ü—Ä–µ–æ–±—Ä–∞–∑—É–π –∫–∞–∂–¥—ã–π —Å–∏–º–≤–æ–ª –≤ ROT13 —á–µ—Ä–µ–∑ strings.Map (—Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω–∏—Ü–∞).
// 34. –ü—Ä–µ–≤—Ä–∞—Ç–∏ snake_case –≤ kebab-case –∏ –æ–±—Ä–∞—Ç–Ω–æ (–ø—Ä–æ—Å—Ç—ã–µ –∑–∞–º–µ–Ω—ã).
// 35. –ù–æ—Ä–º–∞–ª–∏–∑—É–π –ø—Ä–æ–±–µ–ª—ã: –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ–±–µ–ª–æ–≤ -> –æ–¥–∏–Ω, —Ç–∞–±—ã —Ç–æ–∂–µ —Å—á–∏—Ç–∞–µ–º –ø—Ä–æ–±–µ–ª–∞–º–∏ (Map –∏–ª–∏ Fields+Join).

// --- –ë–ª–æ–∫ F. –†–µ–≥–∏—Å—Ç—Ä—ã –∏ Unicode ---

// 36. –ü—Ä–∏–º–µ–Ω—è–π strings.ToLower/ToUpper –Ω–∞ —Å–º–µ—à–∞–Ω–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö (–ª–∞—Ç–∏–Ω–∏—Ü–∞+–∫–∏—Ä–∏–ª–ª–∏—Ü–∞).
// 37. –ò—Å–ø–æ–ª—å–∑—É–π unicode.ToUpper/ToLower –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–¥–∞ –ø–æ —Ä—É–Ω–∞–º.
// 38. –ü—Ä–æ–≤–µ—Ä—å unicode.IsDigit, IsLetter, IsSpace, IsPunct –Ω–∞ —Ä–∞–∑–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–∞—Ö.
// 39. –ò—Å–ø–æ–ª—å–∑—É–π unicode.SimpleFold –¥–ª—è case-insensitive –ø–æ–∏—Å–∫–∞ —Å–∏–º–≤–æ–ª–∞.
// 40. –û—Ç—Ñ–∏–ª—å—Ç—Ä—É–π –∏–∑ —Å—Ç—Ä–æ–∫–∏ —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã (unicode.IsLetter), —Å–æ—Ö—Ä–∞–Ω–∏ –ø–æ—Ä—è–¥–æ–∫.

// --- –ë–ª–æ–∫ G. bytes.* –∑–µ—Ä–∫–∞–ª–∞ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π ---

// 41. –ü–æ–≤—Ç–æ—Ä–∏ –∑–∞–¥–∞–Ω–∏—è 21‚Äì29, –Ω–æ –¥–ª—è []byte —Å bytes.Contains/Index/Split/Trim*.
// 42. –°—Ä–∞–≤–Ω–∏ bytes.Equal –∏ bytes.EqualFold –Ω–∞ –ø—Ä–∏–º–µ—Ä–∞—Ö —Å ASCII –∏ –Ω–µ-ASCII.
// 43. –°–¥–µ–ª–∞–π bytes.Repeat([]byte("-"), 10) –∏ —Å–æ–±–µ—Ä–∏ —Ä–∞–º–∫—É –≤–æ–∫—Ä—É–≥ —Ç–µ–∫—Å—Ç–∞.
// 44. –ù–∞–ø–∏—à–∏ BytesReplaceInPlace: –∏—Å–ø–æ–ª—å–∑—É—è –æ–¥–∏–Ω –±—É—Ñ–µ—Ä, –∑–∞–º–µ–Ω—è–π –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ (–Ω–∞ —É—Ä–æ–≤–Ω–µ –±–∞–π—Ç).
// 45. –†–µ–∞–ª–∏–∑—É–π –±–µ–∑–æ–ø–∞—Å–Ω—É—é –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—é –º–Ω–æ–≥–∏—Ö []byte: –µ–¥–∏–Ω—ã–π make –∏ copy.

// --- –ë–ª–æ–∫ H. Builder/Buffer –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ---

// 46. –°–æ–±–µ—Ä–∏ –¥–ª–∏–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É —á–µ—Ä–µ–∑ –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—é + –≤ —Ü–∏–∫–ª–µ; –∏–∑–º–µ—Ä—å –≤—Ä–µ–º—è/–≤—ã–¥–µ–ª–µ–Ω–∏—è (testing.Benchmark).
// 47. –¢–æ –∂–µ —á–µ—Ä–µ–∑ strings.Builder: WriteString/WriteRune ‚Äî —Å—Ä–∞–≤–Ω–∏ –ø–æ –≤—ã–¥–µ–ª–µ–Ω–∏—è–º.
// 48. –¢–æ –∂–µ —á–µ—Ä–µ–∑ bytes.Buffer: WriteString/WriteRune.
// 49. –°—Ñ–æ—Ä–º–∏—Ä—É–π —Å—Ç—Ä–æ–∫—É —á–µ—Ä–µ–∑ fmt.Fprintf(&builder, "id=%d name=%s", ...).
// 50. –ò—Å–ø–æ–ª—å–∑—É–π fmt.Append / Appendf / Appendln –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è []byte –±–µ–∑ fmt.Sprintf.

// --- –ë–ª–æ–∫ I. Readers/Writers –ø–æ–≤–µ—Ä—Ö —Å—Ç—Ä–æ–∫/–±–∞–π—Ç–æ–≤ ---

// 51. –ü—Ä–æ—á–∏—Ç–∞–π —Å—Ç—Ä–æ–∫—É —á–µ—Ä–µ–∑ strings.NewReader –∏ io.ReadAll.
// 52. –ü—Ä–æ—á–∏—Ç–∞–π –ø–µ—Ä–≤—ã–µ N –±–∞–π—Ç —á–µ—Ä–µ–∑ io.LimitReader(strings.NewReader(...), N).
// 53. –ü–µ—Ä–µ–º–æ—Ç–∞–π strings.Reader: ReadAt –∏ Seek, –≤—ã–≤–µ–¥–∏ –ø–æ–∑–∏—Ü–∏—é.
// 54. –ò—Å–ø–æ–ª—å–∑—É–π bytes.NewReader –¥–ª—è []byte: ReadRune –∏ UnreadRune (—á–µ—Ä–µ–∑ bufio.NewReader).
// 55. –°–∫–æ–ø–∏—Ä—É–π –∏–∑ Reader –≤ —Ñ–∞–π–ª —á–µ—Ä–µ–∑ io.Copy (—Å—Ç—Ä–æ–∫–∞ -> —Ñ–∞–π–ª).

// --- –ë–ª–æ–∫ J. –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∏ strconv ---

// 56. –ü—Ä–µ–æ–±—Ä–∞–∑—É–π —á–∏—Å–ª–∞ –≤ —Å—Ç—Ä–æ–∫—É: strconv.Itoa, FormatInt/FormatFloat —Å –∑–∞–¥–∞–Ω–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é.
// 57. –†–∞—Å–ø–∞—Ä—Å–∏ —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Å–ª–æ: Atoi, ParseInt (–æ—Å–Ω–æ–≤–∞–Ω–∏–µ 16), ParseFloat.
// 58. –ü—Ä–µ–æ–±—Ä–∞–∑—É–π []rune –≤ []byte –∏ –æ–±—Ä–∞—Ç–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ (—á–µ—Ä–µ–∑ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—É—é —Å—Ç—Ä–æ–∫—É –∏ –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ utf8.EncodeRune).
// 59. –ó–∞–∫–æ–¥–∏—Ä—É–π/–¥–µ–∫–æ–¥–∏—Ä—É–π hex –∏ base64 –∏–∑/–≤ []byte (encoding/hex, encoding/base64).
// 60. –≠–∫—Ä–∞–Ω–∏—Ä—É–π —Å—Ç—Ä–æ–∫—É/—Ä–∞—Å–∫–æ–¥–∏—Ä—É–π –ª–∏—Ç–µ—Ä–∞–ª: strconv.Quote / Unquote.

// --- –ë–ª–æ–∫ K. –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –∏ –∏–Ω–¥–µ–∫—Å—ã –ø–æ —Ä—É–Ω–∞–º ---

// 61. –†–µ–∞–ª–∏–∑—É–π —Ñ—É–Ω–∫—Ü–∏—é SubstringRunes(s string, start, n int) string ‚Äî –ø–æ —Ä—É–Ω–∞–º.
// 62. –†–µ–∞–ª–∏–∑—É–π IndexNthRune(s string, n int) int ‚Äî –≤–µ—Ä–Ω–∏ –±–∞–π—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å n-–π —Ä—É–Ω—ã.
// 63. –£–¥–∞–ª–∏ k-—É—é —Ä—É–Ω—É –∏–∑ —Å—Ç—Ä–æ–∫–∏ (–±–µ–∑ –ø–æ—Ä—á–∏ UTF-8).
// 64. –†–∞–∑–≤–µ—Ä–Ω–∏ —Å—Ç—Ä–æ–∫—É –ø–æ —Ä—É–Ω–∞–º (corretto: —É—á–∏—Ç—ã–≤–∞–π —Å—É—Ä—Ä–æ–≥–∞—Ç—ã? ‚Äî –≤ Go –Ω–µ—Ç —Å—É—Ä—Ä–æ–≥–∞—Ç–Ω—ã—Ö –ø–∞—Ä, –Ω–æ —Ä—É–Ω—ã –º–æ–≥—É—Ç –±—ã—Ç—å >1 –±–∞–π—Ç–∞).
// 65. –û–±—Ä–µ–∂—å —Å—Ç—Ä–æ–∫—É –¥–æ maxRunes —Ä—É–Ω, –¥–æ–±–∞–≤–∏–≤ –º–Ω–æ–≥–æ—Ç–æ—á–∏–µ "‚Ä¶" –ø—Ä–∏ —É—Å–µ—á–µ–Ω–∏–∏.

// --- –ë–ª–æ–∫ L. –í–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∏ –æ—á–∏—Å—Ç–∫–∞ UTF-8 ---

// 66. –ó–∞–º–µ–Ω—è–π –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –Ω–∞ 'ÔøΩ' (RuneError) –ø—Ä–∏ —Ä—É—á–Ω–æ–º –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–∏.
// 67. –†–µ–∞–ª–∏–∑—É–π SanitizeToValidUTF8([]byte) []byte ‚Äî –æ—Å—Ç–∞–≤—å —Ç–æ–ª—å–∫–æ –≤–∞–ª–∏–¥–Ω—ã–µ —Ä—É–Ω—ã, –æ—Å—Ç–∞–ª—å–Ω–æ–µ –∑–∞–º–µ–Ω–∏ '?'.
// 68. –ü—Ä–æ–≤–µ—Ä—å utf8.FullRune / utf8.RuneStart –≤ –ø–æ—Ç–æ–∫–µ –±–∞–π—Ç–æ–≤ (—Å—Ç—Ä–∏–º–∏–Ω–≥).
// 69. –°—á–∏—Ç–∞–π —Å—Ç—Ä–æ–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞ –≤ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–µ: –æ—Ç—Ñ–∏–ª—å—Ç—Ä—É–π –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ (–ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å—Ç–∏/–∑–∞–º–µ–Ω–∏).

// --- –ë–ª–æ–∫ M. –°–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è (–≥—Ä–∞–Ω—É–ª—è—Ä–Ω–æ—Å—Ç—å) –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ ---

// 70. –ü–æ–¥—Å—á–∏—Ç–∞–π ¬´—Å–∏–º–≤–æ–ª—ã¬ª –∫–∞–∫ —Ä—É–Ω—ã –∏ —Å—Ä–∞–≤–Ω–∏ —Å ¬´–≥—Ä–∞—Ñ–µ–º–∞–º–∏¬ª –¥–ª—è —Å—Ç—Ä–æ–∫–∏ "üá∫üá¶üë®‚Äçüë©‚Äçüëß‚Äçüë¶" (–æ–±—Å—É–¥–∏, –ø–æ—á–µ–º—É —Ä—É–Ω—ã != –≥—Ä–∞—Ñ–µ–º—ã; stdlib –Ω–µ —Å–µ–≥–º–µ–Ω—Ç–∏—Ä—É–µ—Ç).
// 71. (–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –ò—Å–ø–æ–ª—å–∑—É–π –≤–Ω–µ—à–Ω—é—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É –¥–ª—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏/–≥—Ä–∞—Ñ–µ–º ‚Äî –æ—Ç–º–µ—Ç—å –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, —á—Ç–æ —ç—Ç–æ –≤–Ω–µ stdlib.

// --- –ë–ª–æ–∫ N. –ü—Ä–∞–∫—Ç–∏–∫—É–º ¬´–∏–∑ –∂–∏–∑–Ω–∏¬ª ---

// 72. –ü—Ä–µ–≤—Ä–∞—Ç–∏ CSV-—Å—Ç—Ä–æ–∫—É –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∏ Go-–ø–æ–ª–µ–π: "user id,name" -> "UserID", "Name" (Builder + Map).
// 73. –ù–∞–π–¥–∏ –∏ –∑–∞–º–µ–Ω–∏ –≤—Å–µ email –≤ —Ç–µ–∫—Å—Ç–µ –Ω–∞ "***@***" (bytes/strings + –ø—Ä–æ—Å—Ç–∞—è —ç–≤—Ä–∏—Å—Ç–∏–∫–∞ –∏–ª–∏ regexp).
// 74. –ü–æ–¥—Å—á–∏—Ç–∞–π —Ç–æ–ø-10 —Å–ª–æ–≤ (unicode-—Å–ª–æ–≤–∞), –≤—ã–≤–µ–¥–∏ —á–∞—Å—Ç–æ—Ç—ã –ø–æ —É–±—ã–≤–∞–Ω–∏—é (runes + map + —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞).
// 75. –†–µ–∞–ª–∏–∑—É–π –æ–±—Ä–µ–∑–∫—É –ø–æ –±–∞–π—Ç–∞–º —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ UTF-8: –Ω–µ —Ä–∞–∑—Ä–µ–∑–∞–π –≤–Ω—É—Ç—Ä–∏ —Ä—É–Ω—ã.
// 76. –†–µ–∞–ª–∏–∑—É–π –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–æ–±–µ–ª–æ–≤ –∏ –ø—É–Ω–∫—Ç—É–∞—Ü–∏–∏: —É–±—Ä–∞—Ç—å –¥–≤–æ–π–Ω—ã–µ, –æ–±—Ä–µ–∑–∞—Ç—å –≤–æ–∫—Ä—É–≥ –∑–Ω–∞–∫–æ–≤.
// 77. –°–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–π –º–∞—Å—Å–∏–≤ —Ä—É–Ω –≤ JSON-–º–∞—Å—Å–∏–≤ –∫–æ–¥–æ–≤—ã—Ö —Ç–æ—á–µ–∫ –∏ –æ–±—Ä–∞—Ç–Ω–æ.
// 78. –°–¥–µ–ª–∞–π —Ñ–∏–ª—å—Ç—Ä: –æ—Å—Ç–∞–≤—å —Ç–æ–ª—å–∫–æ ASCII (–±–∞–π—Ç < 128), –æ—Å—Ç–∞–ª—å–Ω–æ–µ –æ—Ç–±—Ä–æ—Å—å.
// 79. –°—Ä–∞–≤–Ω–∏ –ø–∞–º—è—Ç—å/–≤—Ä–µ–º—è: –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏–∏ '+', Builder –∏ Buffer –Ω–∞ 10000 –∫—É—Å–æ—á–∫–æ–≤.
// 80. –†–µ–∞–ª–∏–∑—É–π –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä: –≤ template "Hello, {name}" –ø–æ–¥—Å—Ç–∞–≤—å –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ map[string]string –±–µ–∑ regexp.

// --- –ë–ª–æ–∫ O. –¢–µ—Å—Ç—ã –∏ –ø–æ–≥—Ä–∞–Ω–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏ ---

// 81. –¢–∞–±–ª–∏—á–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è SubstringRunes: –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞, ASCII, –Ω–µ-ASCII, start –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏, n > –¥–ª–∏–Ω—ã.
// 82. –¢–µ—Å—Ç –¥–ª—è EqualFold –Ω–∞ –Ω–µ–º–µ—Ü–∫–æ–º "√ü" vs "SS" –∏ —Ç—É—Ä–µ—Ü–∫–æ–º "i/ƒ∞" (–∑–∞—Ñ–∏–∫—Å–∏—Ä—É–π —Ç–æ–Ω–∫–æ—Å—Ç–∏).
// 83. –§–∞–∑–∑-—Ç–µ—Å—Ç –Ω–∞ SanitizeToValidUTF8: —Å–ª—É—á–∞–π–Ω—ã–µ –±–∞–π—Ç—ã -> –≤—Å–µ–≥–¥–∞ –≤–∞–ª–∏–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.
// 84. –ë–µ–Ω—á–º–∞—Ä–∫ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏: Index vs IndexRune vs —Ä—É—á–Ω–æ–π DecodeRune.
// 85. Property-—Ç–µ—Å—Ç: string -> []rune -> string —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω–æ—Å—Ç—å –¥–ª—è –≤–∞–ª–∏–¥–Ω–æ–≥–æ UTF-8.
