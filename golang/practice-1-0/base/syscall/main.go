package main

// 1. Открой файл `input.txt` через `syscall.Open` и выведи первые 50 байт.


// 2. Создай файл `output.txt` и запиши туда строку `"syscall write"` с `syscall.Write`.


// 3. Открой файл, сделай `syscall.Dup`, запиши в дубликат `"dup test\n"`.


// 4. Получи информацию о файле `config.json` через `syscall.Stat` 
// и выведи размер и владельца.


// 5. Измени права на файл `secret.txt` на `0600` через `syscall.Chmod`.


// 6. Удали файл `temp.bin`, если он существует, используя `syscall.Unlink`.


// 7. Создай директорию `logdir` с правами `0755` через `syscall.Mkdir`.


// 8. Используя `syscall.Mknod`, создай обычный файл (тип `S_IFREG`) вручную.


// 9. Открой файл `notes.txt`, затем получи его дескриптор 
// и вызови `syscall.Fstat`, выведи `Ino`.


// 10. Используя `syscall.Link`, создай жёсткую ссылку `notes_link.txt` на `notes.txt`.


// 11. Сделай `mmap` для чтения из `data.txt` и выведи первые 10 байт как строку.


// 12. Сделай `mmap` и преврати его содержимое в `[]byte`, 
// посчитай количество символов `'a'`.


// 13. Используя `syscall.Access`, проверь, можно ли писать в файл `readonly.txt`.


// 14. Напиши функцию `IsSocket(path string) bool`, 
// возвращающую `true`, если путь — socket.


// 15. Открой файл и используй `syscall.Lseek`, 
// чтобы переместиться в середину и прочитать 5 байт.


// 16. Используя `syscall.Ftruncate`, обрежь файл `large.txt` до первых 100 байт.


// 17. Реализуй `ReadLastNBytes(path string, n int)` с `Lseek` + `Read`.


// 18. Открой файл и получи `UID` владельца через `syscall.Stat_t`.


// 19. Используя `syscall.Getuid()`, проверь, 
// от какого пользователя запущено приложение.


// 20. Реализуй функцию `CatSyscall(path string)`, 
// которая полностью выводит файл на `stdout`, используя только `syscall.Read/Write`.


