package main

// 1. Создай `map[string]int`, добавь туда три пары: "one" → 1, "two" → 2, "three" → 3.

// 2. Прочитай значение по ключу `"two"` и выведи его, используя `v, ok := m["two"]`.

// 3. Удали ключ `"one"` из map и проверь, что его больше нет.

// 4. Посчитай количество элементов в map через `len(m)`.

// 5. Объяви переменную `var m map[string]int` и попробуй записать туда значение.
// Что произойдёт?

// 6. Создай map, где ключ — `int`,
// а значение — структура `User{Name string, Age int}`.
// Добавь 2 пользователя.

// 7. Обнови поле `Age` у пользователя в map, если значения — структура.
// Что произойдёт? Почему?

// 8. Переделай предыдущую задачу, чтобы значения
// были указателями: `map[int]*User`. Измени возраст.

// 9. Пройди по map через `for k, v := range m`
// и выведи все пары.

// 10. Суммируй значения всех чисел в map: `map[string]int{"a":1, "b":2, "c":3}`.

// 11. Создай `map[int]string` и наполни её из слайса строк, где индекс = ключ.

// 12. Проверь, есть ли ключ `42` в `map[int]string`, и выведи `"not found"`, если нет.

// 13. Используя вложенную `map[string]map[string]int`,
// добавь ключ `"outer" → "inner" → 100`.

// 14. Реализуй функцию `Keys(m map[string]int) []string`,
// возвращающую слайс всех ключей.

// 15. Реализуй `Invert(m map[string]int) map[int]string`,
// которая меняет местами ключи и значения.

// 16. Создай map, в которой значения — слайсы строк: `map[string][]string`.
// Добавь несколько тегов для категорий.

// 17. Удали все элементы map через `for k := range m { delete(m, k) }`.

// 18. Проверь поведение map в функции: передай map, измени элемент,
// верни map. Что произойдёт?

// 19. Создай map для подсчёта количества вхождений слов из слайса `[]string{"a", "b", "a", "c", "b", "a"}`.

// 20. Напиши функцию `GroupByLength([]string) map[int][]string`,
// группирующую слова по длине.

// 21. Создай `map[int][]int`, добавь в неё несколько слайсов,
// удали первый элемент из одного из них.

// 22. Используй `make(map[string]int, 1000)`
// и наполни map числами от 1 до 1000.

// 23. Сделай map с ключами-структурами `type Coord struct{X, Y int}`.
// Добавь несколько точек.

// 24. Создай `map[string]interface{}` и добавь туда строки,
// числа и вложенные map.

// 25. Преобразуй `map[string]string` в JSON строку с помощью `encoding/json`.

// 26. Из JSON-строки распарсь `map[string]interface{}`.
// Обратись к вложенному полю.

// 27. Напиши `CloneMap(m map[string]int) map[string]int`,
// возвращающую копию.

// 28. Реализуй `MergeMaps(a, b map[string]int) map[string]int`,
// объединяющую два отображения.

// 29. Передай map с указателями в горутину и измени значение.
// Объясни, почему работает.

// 30. Создай map, в которой значением является функция `func(int) int`.
// Пример: `"square"` → x², `"double"` → 2×x. Вызови нужную по ключу.
