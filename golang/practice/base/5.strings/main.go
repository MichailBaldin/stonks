package main

// 1. Создай строку `"hello"` и выведи её длину в байтах.


// 2. Создай строку `"привет"` и выведи количество рун (`[]rune`) в ней.


// 3. Получи подстроку `"ell"` из строки `"hello"`.


// 4. Преобразуй строку `"hello"` в `[]byte`, замени `'h'` на `'H'`, верни в строку.


// 5. Обойди строку по символам через `for _, r := range s` и выведи каждый символ.


// 6. Сравни `"go"` и `"Go"` без учёта регистра.


// 7. Проверь, содержит ли строка `"golang"` подстроку `"go"`.


// 8. Проверь, начинается ли строка с `"пре"` и заканчивается ли на `"fix"`.


// 9. Разбей строку `"a,b,c"` на части по запятой.


// 10. Соедини слайс строк `[]string{"a", "b", "c"}` в строку через `-`.


// 11. Удали все пробелы из строки `" a b c "`.


// 12. Замени все вхождения `"cat"` на `"dog"` в строке.


// 13. Преобразуй `int` в строку через `strconv.Itoa()` и обратно через `strconv.Atoi()`.


// 14. Сформируй строку вида `"Sum = 42"` с использованием `fmt.Sprintf()`.


// 15. Преобразуй строку `"123"` в `[]rune`, увеличь каждую цифру на 1, верни строку.


// 16. Напиши функцию `IsPalindrome(s string) bool`, проверяющую палиндром (без учёта регистра).


// 17. Подсчитай количество гласных в строке (используй `rune`).


// 18. Удали все цифры из строки.


// 19. Реализуй `CountRunes(s string) map[rune]int`, считающую частоту символов.


// 20. Переверни строку `"hello"` → `"olleh"` (через `[]rune`).


// 21. Убери все повторяющиеся символы, сохранив порядок.


// 22. Сравни две строки посимвольно и выведи позиции, где они различаются.


// 23. Создай структуру `User{Username string}` и метод `Initials() string`, возвращающий первые буквы.


// 24. Сгруппируй слова из слайса по длине: `GroupByLen([]string) map[int][]string`.


// 25. Используй `strings.Builder` для склейки 1000 строк `"x"` в одну.


// 26. Преобразуй `map[string]string` в JSON-строку.


// 27. Из JSON-строки извлеки поле `"name"` и выведи его.


// 28. Напиши функцию `Compress(s string) string`, которая сжимает `"aaabbc"` в `"a3b2c1"`.


// 29. Реализуй `SplitToChunks(s string, n int) []string`, разбивающую строку на чанки.


// 30. Используй `rune` для фильтрации строки — оставь только кириллические символы.
