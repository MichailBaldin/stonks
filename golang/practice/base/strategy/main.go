package main

// 1. –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å `Sorter.Sort([]int) []int`, —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ ‚Äî `AscSort`, `DescSort`.
//    –í—ã–≤–µ–¥–∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ `[3, 1, 2]`.

// 2. –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å `Formatter.Format(text string) string`.
//    –°—Ç—Ä–∞—Ç–µ–≥–∏—è `UpperCaseFormatter` ‚Üí `"hello"` ‚Üí `"HELLO"`.

// 3. –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å `Discount.Calc(price float64) float64`.
//    –°—Ç—Ä–∞—Ç–µ–≥–∏—è `TenPercentOff` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç `price * 0.9`.

// 4. –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å `Filter.Apply([]int) []int`.
//    –°—Ç—Ä–∞—Ç–µ–≥–∏—è: –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ —á—ë—Ç–Ω—ã–µ.
//    –í–≤–æ–¥: `[1,2,3,4]` ‚Üí –í—ã–≤–æ–¥: `[2 4]`.

// 5. –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å `Validator.Validate(s string) bool`.
//    –°—Ç—Ä–∞—Ç–µ–≥–∏—è `NotEmptyValidator`.
//    –ü—Ä–æ–≤–µ—Ä—å —Å—Ç—Ä–æ–∫—É `""` ‚Üí false, `"ok"` ‚Üí true.

// 6. –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å `Comparator.Compare(a, b int) bool`.
//    –°—Ç—Ä–∞—Ç–µ–≥–∏—è: `GreaterThan`, –ø—Ä–æ–≤–µ—Ä–∫–∞ `3,2` ‚Üí `true`.

// 7. –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å `Encoder.Encode(text string) string`.
//    –°—Ç—Ä–∞—Ç–µ–≥–∏—è `Reverser`, —Å—Ç—Ä–æ–∫–∞ `"abc"` ‚Üí `"cba"`.

// 8. –°—Ç—Ä–∞—Ç–µ–≥–∏—è –∫–∞–∫ `func(int, int) int`.
//    –í–Ω–µ–¥—Ä–∏ —Ñ—É–Ω–∫—Ü–∏—é `add`, –ø–µ—Ä–µ–¥–∞–π `2, 3` ‚Üí `5`.

// 9. –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å `Renderer.Render(content string) string`.
//    –°—Ç—Ä–∞—Ç–µ–≥–∏—è `HtmlRenderer` ‚Üí `"Go"` ‚Üí `"<p>Go</p>"`.

// 10. –°—Ç—Ä–∞—Ç–µ–≥–∏—è `CSVExporter.Export([]string) string`.
//     –ú–∞—Å—Å–∏–≤ `["a", "b", "c"]` ‚Üí `"a,b,c"`.

// 11. –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å `Logger.Log(text string)`, —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏: `ConsoleLogger`, `SilentLogger`.
//     `"msg"` –ø–µ—á–∞—Ç–∞–µ—Ç—Å—è –∏–ª–∏ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏.

// 12. –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å `Divider.Divide(a, b int) int`.
//     –°—Ç—Ä–∞—Ç–µ–≥–∏—è `SafeDivide` ‚Üí `a / b`, –Ω–æ –µ—Å–ª–∏ `b == 0`, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç `0`.

// 13. –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å `Printer.Print(s string) string`, —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –¥–æ–±–∞–≤–ª—è–µ—Ç –ø—Ä–µ—Ñ–∏–∫—Å `"LOG: "` –∫ —Ç–µ–∫—Å—Ç—É.

// 14. –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å `Hasher.Hash(data string) string`.
//     –°—Ç—Ä–∞—Ç–µ–≥–∏—è: –≤–µ—Ä–Ω—É—Ç—å `"hashed:" + data`.

// 15. –°—Ç—Ä–∞—Ç–µ–≥–∏—è –∫–∞–∫ `func([]int) int` ‚Äî –≤–µ—Ä–Ω—É—Ç—å –º–∞–∫—Å–∏–º—É–º.
//     `[1, 5, 3]` ‚Üí `5`.

// 16. –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å `PayStrategy.Pay(amount float64) string`.
//     –°—Ç—Ä–∞—Ç–µ–≥–∏—è: `"Paid %.2f with card"`.

// 17. –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å `Joiner.Join(a, b string) string`.
//     –°—Ç—Ä–∞—Ç–µ–≥–∏—è –¥–æ–±–∞–≤–ª—è–µ—Ç `"::"` –º–µ–∂–¥—É —Å—Ç—Ä–æ–∫–∞–º–∏.

// 18. –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å `Alarm.Trigger(code int) string`, —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç `"Code: %d"`.

// 19. –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å `Colorizer.Color(name string) string`, —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç `"üîµ name"`.

// 20. –°—Ç—Ä–∞—Ç–µ–≥–∏—è `func(string) bool`, –∏–º—è ‚Üí true, –µ—Å–ª–∏ –¥–ª–∏–Ω–Ω–µ–µ 5 —Å–∏–º–≤–æ–ª–æ–≤.
//     `"Ivan"` ‚Üí `false`, `"Vladimir"` ‚Üí `true`.
