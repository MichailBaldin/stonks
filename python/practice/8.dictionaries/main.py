# python/practice/day3/4.dictionaries/main.py

# 1. Создай словарь с информацией о человеке (имя, возраст, город).

# 2. Добавь новый ключ в словарь и измени существующий.

# 3. Удали элемент словаря через del и через pop().

# 4. Получи значение по ключу через [] и через get() с значением по умолчанию.

# 5. Выведи все ключи, значения и пары ключ-значение.

# 6. Проверь, есть ли ключ в словаре через in.

# 7. Объедини два словаря через update().

# 8. Создай словарь из двух списков через zip().

# 9. Создай словарь, где ключи - числа, значения - их квадраты (dict comprehension).

# 10. Посчитай частоту букв в слове с помощью словаря.

# 11. Найди ключ с максимальным значением в словаре.

# 12. Создай вложенный словарь (словарь словарей).

# 13. Отсортируй словарь по ключам и по значениям.

# 14. Создай словарь со значениями по умолчанию через defaultdict.

# 15. Обрати словарь (ключи становятся значениями и наоборот).

# 16. Отфильтруй словарь, оставив только элементы с чётными значениями.

# 17. Создай функцию для глубокого копирования словаря.

# 18. Найди общие ключи в двух словарях.

# 19. Создай словарь студентов с их оценками и найди средний балл.

# 20. Группируй список слов по их первой букве в словарь.

# 21. Создай многоуровневый доступ к элементу словаря с проверкой.

# 22. Посчитай количество слов определённой длины в тексте.

# 23. Создай словарь-кэш для запоминания результатов функции.

# 24. Найди все ключи словаря, которые содержат определённую подстроку.

# 25. Создай словарь из аргументов функции через **kwargs.

# 26. Преобразуй словарь в список кортежей и обратно.

# 27. Создай функцию для безопасного получения вложенного значения.

# 28. Найди пересечение значений двух словарей.

# 29. Создай словарь счётчик для подсчёта элементов списка.

# 30. Реализуй простую базу данных на словарях с операциями CRUD.